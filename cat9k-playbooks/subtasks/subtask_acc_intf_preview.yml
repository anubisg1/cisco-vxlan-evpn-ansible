- name: Set inteface detail
  when: " intf_item | type_debug != 'dict' "
  ansible.builtin.set_fact:
    intf_name: "{{ intf_item }}"
    vlan_id: "{{ vlan_id_common }}"

- name: Collect custom VLAN/s per interface
  when: " intf_item | type_debug == 'dict' "
  block:
    - name: Loading data details
      ansible.builtin.set_fact:
        intf_name: "{{ item }}"
      with_items: "{{ intf_item.keys() }}"

    - name: Get custom VLAN/s
      ansible.builtin.set_fact:
        vlan_id: "{{ intf_item[intf_name][info_dict[intf_mode]['key_name']] }}"

- name: Trunk interface configuration
  when: intf_mode == 'trunks'
  block:
    - name: Call ios_l2_interfaces module
      cisco.ios.ios_l2_interfaces:
        config:
          - name: "{{ intf_name }}"
            mode: trunk
            trunk:
              allowed_vlans: "{{ vlan_id }}"
        state: rendered
      register: trunk_unit

    - name: Loading data details
      ansible.builtin.set_fact:
        intf_conf_unit: "{{ trunk_unit }}"

- name: Access interface configuration
  when: intf_mode == 'access'
  block:
    - name: Call ios_l2_interfaces module
      cisco.ios.ios_l2_interfaces:
        config:
          - name: "{{ intf_name }}"
            mode: access
            access:
              vlan: "{{ vlan_id }}"
        state: rendered
      register: access_unit

    - name: Loading data details
      ansible.builtin.set_fact:
        intf_conf_unit: "{{ access_unit }}"

- name: Rendering output for playbook mode incrememtal
  when: playbook_mode == 'inc'
  ansible.builtin.set_fact:
    intf_conf_unit: "{{ intf_conf_unit | regex_replace('trunk allowed vlan', 'trunk allowed vlan add') }}"

- name: Rendering output - no shutdown
  ansible.builtin.set_fact:
    intf_conf_unit: "{{ [ '!'] + intf_conf_unit.rendered + [ '!\ninterface ' +intf_name + '\nno shutdown'] }}"

- name: Appending output
  ansible.builtin.set_fact:
    intf_conf: "{{ intf_conf_unit + intf_conf }}"
